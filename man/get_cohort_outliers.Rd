% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/outlier-detection.R
\name{get_cohort_outliers}
\alias{get_cohort_outliers}
\title{Detect the outlying samples in a cohort.}
\usage{
get_cohort_outliers(cohort)
}
\arguments{
\item{cohort}{A two-character string, e.g. \code{"BW"}.}
}
\value{
An object of class \code{mirvie_cohort_outliers}. This is a data frame
with 5 principal components named \code{PC1}, \code{PC2}, . . ., \code{PC5}. It also has
columns \code{meta_collectionga}, \code{mirvie_id} and \code{outlier} which is a boolean
column where \code{TRUE} indicates an outlier. This object has attributes
\code{var_exp} and \code{loadings}. Read the documentation of
\code{\link[mirmodels:compute_pcas]{mirmodels::compute_pcas()}} for more on those.
}
\description{
This function wraps \code{\link[mirmodels:compute_pcas]{mirmodels::compute_pcas()}} and hence uses
\code{\link[rrcov:PcaGrid]{rrcov::PcaGrid()}} to do robust PCA analysis and detect outliers.
}
\details{
Prior to PCA calculation (and outlier detection), a call to
\code{\link[mirmodels:linear_correct]{mirmodels::linear_correct()}} is made to regress away the effect of the
total number of counts on gene expression levels, with care taken to not
regress away the effect of gestational age.

There's an Easter egg. You can pass a data frame directly as the \code{cohort}
argument and then the function will use that rather than having to call
\verb{get_*_data()} to get the data. I advise \verb{get_*_data(log2 = TRUE, tot_counts = TRUE, gene_pred = ~median(.) > 0)}.
}
\examples{
if (require("mirmodels")) {
  ga_outliers <- get_cohort_outliers("ga")
  autoplot(ga_outliers)
}
}
\seealso{
\code{\link[=autoplot.mirvie_cohort_outliers]{autoplot.mirvie_cohort_outliers()}}
}
