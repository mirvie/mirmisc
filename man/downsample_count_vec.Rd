% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/downsample.R
\name{downsample_count_vec}
\alias{downsample_count_vec}
\alias{downsample_count_mat_rows}
\alias{downsample_count_mat_cols}
\alias{downsample_gene_counts}
\title{Downsample a vector of counts.}
\usage{
downsample_count_vec(vec, end_sum)

downsample_count_mat_rows(mat, end_sum)

downsample_count_mat_cols(mat, end_sum)

downsample_gene_counts(df, end_sum)
}
\arguments{
\item{vec}{A vector of non-negative integers.}

\item{end_sum}{The number that you would like vector to sum to after
downsampling. This must be less than the initial sum.}

\item{mat}{A matrix of non-negative integers.}

\item{df}{A data frame with gene names as columns.}
}
\value{
A vector of non-negative integers.
}
\description{
Uniformly downsample a vector of non-negative integers to have a specified
sum. That is, keep randomly subtracting 1 from nonzero elements of the vector
until it has the desired sum. Each count is equally likely to be taken. That
is, an element with value 8 is 4 times more likely to be decremented than an
element with value 2.
}
\details{
\code{downsample_count_mat_rows()} and \code{downsample_count_mat_cols()} just do
\code{downsample_vec()} to all rows and columns of a matrix using \code{\link[=apply]{apply()}}.

\code{downsample_gene_counts()} downsamples on the subset of columns in the
data frame that have names in \code{get_gene_names()}.

If \code{end_sum > sum(vec)}, \code{vec} is returned unchanged.
}
\examples{
downsample_count_vec(1:24, 24)
mat <- matrix(sample.int(100, size = 6^2, replace = TRUE), nrow = 6)
downsample_count_mat_rows(mat, end_sum = 6)
downsample_count_mat_cols(mat, end_sum = 6)
if (rlang::is_installed("mirmodels")) {
  ms_data <- mirmodels::get_ms_data(gene_predicate = ~ median(.) > 0)
  downsampled_ms <- downsample_gene_counts(ms_data, end_sum = 1e6)
}
}
